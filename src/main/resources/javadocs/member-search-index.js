memberSearchIndex = [{"p":"cryptoTrader.views.loginView","c":"LoginView","l":"actionPerformed(ActionEvent)","u":"actionPerformed(java.awt.event.ActionEvent)"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"BrokerTableView","l":"actionPerformed(ActionEvent)","u":"actionPerformed(java.awt.event.ActionEvent)"},{"p":"cryptoTrader.views.mainView.tradeView","c":"TradeView","l":"actionPerformed(ActionEvent)","u":"actionPerformed(java.awt.event.ActionEvent)"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"BrokerTableView","l":"addbroker()"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"UpdateBrokerTableView","l":"addbroker()"},{"p":"cryptoTrader.models.brokerModel","c":"BrokerModel","l":"addBroker()"},{"p":"cryptoTrader.models.brokerModel","c":"UpdateBrokerModel","l":"addBroker()"},{"p":"cryptoTrader.dataStorage.brokerDatabase","c":"BrokerData","l":"addBroker(Broker)","u":"addBroker(cryptoTrader.models.brokerModel.Broker)"},{"p":"cryptoTrader.dataStorage.brokerDatabase","c":"UpdateBrokerData","l":"addBroker(Broker)","u":"addBroker(cryptoTrader.models.brokerModel.Broker)"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceiptsDatabase","l":"addTradeReceipt(TradeReceipt)","u":"addTradeReceipt(cryptoTrader.dataStorage.tradeReceiptDatabase.TradeReceipt)"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"UpdateTradeReceipts","l":"addTradeReceipt(TradeReceipt)","u":"addTradeReceipt(cryptoTrader.dataStorage.tradeReceiptDatabase.TradeReceipt)"},{"p":"cryptoTrader.models.loginModel","c":"LoginModel","l":"authenticateDictionary(String, String)","u":"authenticateDictionary(java.lang.String,java.lang.String)"},{"p":"cryptoTrader.models.loginModel","c":"RequestAuthentication","l":"authenticateDictionary(String, String)","u":"authenticateDictionary(java.lang.String,java.lang.String)"},{"p":"cryptoTrader.controllers.loginController","c":"LoginController","l":"authenticateUser(String, String)","u":"authenticateUser(java.lang.String,java.lang.String)"},{"p":"cryptoTrader.controllers.loginController","c":"RequestUserLogin","l":"authenticateUser(String, String)","u":"authenticateUser(java.lang.String,java.lang.String)"},{"p":"cryptoTrader.views.mainView.tradeView","c":"TradeGraphView","l":"barGraph()"},{"p":"cryptoTrader.models.brokerModel","c":"Broker","l":"Broker(String, List<Coin>, String)","u":"%3Cinit%3E(java.lang.String,java.util.List,java.lang.String)"},{"p":"cryptoTrader.models.tradeModel.brokerDataFetcher","c":"BrokerDataFetcher","l":"BrokerDataFetcher()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"BrokerTableView","l":"BrokerTableView()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.utils","c":"AvailableCryptoList","l":"call()"},{"p":"cryptoTrader.views.loginView","c":"LoginView","l":"closeLoginView()"},{"p":"cryptoTrader.views.loginView","c":"UpdateLoginView","l":"closeLoginView()"},{"p":"cryptoTrader.models.tradeModel.coinFetcher","c":"Coin","l":"Coin(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"cryptoTrader.models.tradeModel.coinFetcher","c":"Coin","l":"Coin(String, int, LocalDate)","u":"%3Cinit%3E(java.lang.String,int,java.time.LocalDate)"},{"p":"cryptoTrader.views.mainView.tradeView","c":"TradeTableView","l":"createTable()"},{"p":"cryptoTrader.models.tradeModel.coinFetcher","c":"DataFetcher","l":"DataFetcher()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.views.mainView.tradeView","c":"TradeView","l":"displayTradeView()"},{"p":"cryptoTrader.views.mainView.tradeView","c":"UpdateTradeView","l":"displayTradeView()"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"BrokerTableView","l":"dtm"},{"p":"cryptoTrader.models.brokerModel","c":"BrokerModel","l":"editBroker(int, String, String, String)","u":"editBroker(int,java.lang.String,java.lang.String,java.lang.String)"},{"p":"cryptoTrader.models.brokerModel","c":"UpdateBrokerModel","l":"editBroker(int, String, String, String)","u":"editBroker(int,java.lang.String,java.lang.String,java.lang.String)"},{"p":"cryptoTrader.models.tradeModel.coinFetcher","c":"Coin","l":"equals(Coin)","u":"equals(cryptoTrader.models.tradeModel.coinFetcher.Coin)"},{"p":"cryptoTrader.models.loginModel","c":"LoginModel","l":"generateDictionary()"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategy","l":"generateTradeReceipt(String, String, String, String, Double, Double, String)","u":"generateTradeReceipt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Double,java.lang.String)"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceipt","l":"getAction()"},{"p":"cryptoTrader.utils","c":"AvailableCryptoList","l":"getAvailableCryptos()"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceipt","l":"getBroker()"},{"p":"cryptoTrader.dataStorage.brokerDatabase","c":"BrokerData","l":"getBrokerAtIndex(int)"},{"p":"cryptoTrader.dataStorage.brokerDatabase","c":"UpdateBrokerData","l":"getBrokerAtIndex(int)"},{"p":"cryptoTrader.dataStorage.brokerDatabase","c":"BrokerData","l":"getBrokerList()"},{"p":"cryptoTrader.models.brokerModel","c":"Broker","l":"getBrokerName()"},{"p":"cryptoTrader.models.tradeModel.brokerDataFetcher","c":"BrokerDataFetcher","l":"getBrokers()"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceipt","l":"getCoin()"},{"p":"cryptoTrader.models.brokerModel","c":"Broker","l":"getCoinList()"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"TableCellListener","l":"getColumn()"},{"p":"cryptoTrader.utils","c":"AvailableCryptoList","l":"getCryptoID(String)","u":"getCryptoID(java.lang.String)"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceipt","l":"getDate()"},{"p":"cryptoTrader.models.tradeModel.coinFetcher","c":"Coin","l":"getDate()"},{"p":"cryptoTrader.controllers.brokerController","c":"BrokerController","l":"getInstance()"},{"p":"cryptoTrader.controllers.loginController","c":"LoginController","l":"getInstance()"},{"p":"cryptoTrader.controllers.tradeController","c":"TradeController","l":"getInstance()"},{"p":"cryptoTrader.dataStorage.brokerDatabase","c":"BrokerData","l":"getInstance()"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceiptsDatabase","l":"getInstance()"},{"p":"cryptoTrader.models.brokerModel","c":"BrokerModel","l":"getInstance()"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategyFactory","l":"getInstance()"},{"p":"cryptoTrader.models.loginModel","c":"LoginModel","l":"getInstance()"},{"p":"cryptoTrader.models.tradeModel","c":"TradeModel","l":"getInstance()"},{"p":"cryptoTrader.utils","c":"AvailableCryptoList","l":"getInstance()"},{"p":"cryptoTrader.views.loginView","c":"LoginView","l":"getInstance()"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"BrokerTableView","l":"getInstance()"},{"p":"cryptoTrader.views.mainView","c":"MainUI","l":"getInstance()"},{"p":"cryptoTrader.views.mainView.tradeView","c":"TradeGraphView","l":"getInstance()"},{"p":"cryptoTrader.views.mainView.tradeView","c":"TradeTableView","l":"getInstance()"},{"p":"cryptoTrader.views.mainView.tradeView","c":"TradeView","l":"getInstance()"},{"p":"cryptoTrader.models.tradeModel.coinFetcher","c":"DataFetcher","l":"getMarketCapForCoin(String, String)","u":"getMarketCapForCoin(java.lang.String,java.lang.String)"},{"p":"cryptoTrader.models.tradeModel.coinFetcher","c":"Coin","l":"getName()"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"TableCellListener","l":"getNewValue()"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"TableCellListener","l":"getOldValue()"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceipt","l":"getPrice()"},{"p":"cryptoTrader.models.tradeModel.coinFetcher","c":"Coin","l":"getPrice()"},{"p":"cryptoTrader.models.tradeModel.coinFetcher","c":"DataFetcher","l":"getPriceForCoin(String, String)","u":"getPriceForCoin(java.lang.String,java.lang.String)"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceipt","l":"getQuantity()"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"TableCellListener","l":"getRow()"},{"p":"cryptoTrader.views.mainView.tradeView","c":"TradeView","l":"getStatsPanel()"},{"p":"cryptoTrader.models.brokerModel","c":"Broker","l":"getStrategyDictionary()"},{"p":"cryptoTrader.models.brokerModel","c":"BrokerModel","l":"getStrategyList()"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategyFactory","l":"getStrategyList()"},{"p":"cryptoTrader.models.brokerModel","c":"UpdateBrokerModel","l":"getStrategyList()"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"TableCellListener","l":"getTable()"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceiptsDatabase","l":"getTradeReceiptList()"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"UpdateTradeReceipts","l":"getTradeReceiptList()"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceipt","l":"getTradingStrategy()"},{"p":"cryptoTrader.models.brokerModel","c":"Broker","l":"getTradingStrategy()"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategyFactory","l":"getTradingStrategy(String)","u":"getTradingStrategy(java.lang.String)"},{"p":"cryptoTrader.models.tradeModel.coinFetcher","c":"DataFetcher","l":"getVolumeForCoin(String, String)","u":"getVolumeForCoin(java.lang.String,java.lang.String)"},{"p":"cryptoTrader.models.brokerModel","c":"Broker","l":"incrementStrategyDictionary()"},{"p":"cryptoTrader.views.loginView","c":"LoginView","l":"initializeLoginWindow()"},{"p":"cryptoTrader.controllers.tradeController","c":"RequestTrade","l":"initiateTrade()"},{"p":"cryptoTrader.controllers.tradeController","c":"TradeController","l":"initiateTrade()"},{"p":"cryptoTrader.controllers.loginController","c":"LoginController","l":"LoginController()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.models.loginModel","c":"LoginModel","l":"LoginModel()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.views.loginView","c":"LoginView","l":"LoginView()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.controllers.startProgramController","c":"StartProgram","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"cryptoTrader.models.tradeModel.coinFetcher","c":"DataFetcher","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"cryptoTrader.views.mainView","c":"MainUI","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"cryptoTrader.views.mainView.tradeView","c":"TradeView","l":"notifyFailTrade(String)","u":"notifyFailTrade(java.lang.String)"},{"p":"cryptoTrader.views.mainView.tradeView","c":"UpdateTradeView","l":"notifyFailTrade(String)","u":"notifyFailTrade(java.lang.String)"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"Strategy","l":"performTrade(Broker)","u":"performTrade(cryptoTrader.models.brokerModel.Broker)"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategy","l":"performTrade(Broker)","u":"performTrade(cryptoTrader.models.brokerModel.Broker)"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategyA","l":"performTrade(Broker)","u":"performTrade(cryptoTrader.models.brokerModel.Broker)"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategyB","l":"performTrade(Broker)","u":"performTrade(cryptoTrader.models.brokerModel.Broker)"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategyC","l":"performTrade(Broker)","u":"performTrade(cryptoTrader.models.brokerModel.Broker)"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategyD","l":"performTrade(Broker)","u":"performTrade(cryptoTrader.models.brokerModel.Broker)"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"TableCellListener","l":"propertyChange(PropertyChangeEvent)","u":"propertyChange(java.beans.PropertyChangeEvent)"},{"p":"cryptoTrader.dataStorage.brokerDatabase","c":"BrokerData","l":"removeBroker(int)"},{"p":"cryptoTrader.dataStorage.brokerDatabase","c":"UpdateBrokerData","l":"removeBroker(int)"},{"p":"cryptoTrader.models.brokerModel","c":"BrokerModel","l":"removeBroker(int)"},{"p":"cryptoTrader.models.brokerModel","c":"UpdateBrokerModel","l":"removeBroker(int)"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"BrokerTableView","l":"removeBroker(int)"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"UpdateBrokerTableView","l":"removeBroker(int)"},{"p":"cryptoTrader.controllers.brokerController","c":"BrokerController","l":"requestAddBroker()"},{"p":"cryptoTrader.controllers.brokerController","c":"RequestBrokerUpdate","l":"requestAddBroker()"},{"p":"cryptoTrader.controllers.brokerController","c":"BrokerController","l":"requestBrokerEdit(int, String, String, String)","u":"requestBrokerEdit(int,java.lang.String,java.lang.String,java.lang.String)"},{"p":"cryptoTrader.controllers.brokerController","c":"RequestBrokerUpdate","l":"requestBrokerEdit(int, String, String, String)","u":"requestBrokerEdit(int,java.lang.String,java.lang.String,java.lang.String)"},{"p":"cryptoTrader.controllers.brokerController","c":"BrokerController","l":"requestRemoveBroker(int)"},{"p":"cryptoTrader.controllers.brokerController","c":"RequestBrokerUpdate","l":"requestRemoveBroker(int)"},{"p":"cryptoTrader.controllers.brokerController","c":"BrokerController","l":"requestStrategyList()"},{"p":"cryptoTrader.controllers.brokerController","c":"RequestBrokerUpdate","l":"requestStrategyList()"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"TableCellListener","l":"run()"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceipt","l":"setAction(String)","u":"setAction(java.lang.String)"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceipt","l":"setBroker(String)","u":"setBroker(java.lang.String)"},{"p":"cryptoTrader.models.brokerModel","c":"Broker","l":"setBrokerName(String)","u":"setBrokerName(java.lang.String)"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceipt","l":"setCoin(String)","u":"setCoin(java.lang.String)"},{"p":"cryptoTrader.models.brokerModel","c":"Broker","l":"setCoinList(List<Coin>)","u":"setCoinList(java.util.List)"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceipt","l":"setDate(String)","u":"setDate(java.lang.String)"},{"p":"cryptoTrader.models.tradeModel.coinFetcher","c":"Coin","l":"setDate(String)","u":"setDate(java.lang.String)"},{"p":"cryptoTrader.models.tradeModel.coinFetcher","c":"Coin","l":"setName(String)","u":"setName(java.lang.String)"},{"p":"cryptoTrader.models.tradeModel.coinFetcher","c":"Coin","l":"setPrice(double)"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceipt","l":"setPrice(Double)","u":"setPrice(java.lang.Double)"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceipt","l":"setQuantity(Double)","u":"setQuantity(java.lang.Double)"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceipt","l":"setTradingStrategy(String)","u":"setTradingStrategy(java.lang.String)"},{"p":"cryptoTrader.models.brokerModel","c":"Broker","l":"setTradingStrategy(String)","u":"setTradingStrategy(java.lang.String)"},{"p":"cryptoTrader.views.mainView","c":"MainUI","l":"startMainUI()"},{"p":"cryptoTrader.views.mainView","c":"UpdateMainView","l":"startMainUI()"},{"p":"cryptoTrader.controllers.startProgramController","c":"StartProgram","l":"StartProgram()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.models.tradeModel","c":"TradeModel","l":"startTrading()"},{"p":"cryptoTrader.models.tradeModel","c":"UpdateTradeModel","l":"startTrading()"},{"p":"cryptoTrader.views.loginView","c":"LoginView","l":"succesfulLogin()"},{"p":"cryptoTrader.views.loginView","c":"UpdateLoginView","l":"succesfulLogin()"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"TableCellListener","l":"TableCellListener(JTable, Action)","u":"%3Cinit%3E(javax.swing.JTable,javax.swing.Action)"},{"p":"cryptoTrader.models.brokerModel","c":"Broker","l":"toString()"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategy","l":"toString()"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategyA","l":"toString()"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategyB","l":"toString()"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategyC","l":"toString()"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategyD","l":"toString()"},{"p":"cryptoTrader.controllers.tradeController","c":"TradeController","l":"TradeController()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.views.mainView.tradeView","c":"TradeGraphView","l":"TradeGraphView()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.models.tradeModel","c":"TradeModel","l":"TradeModel()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceipt","l":"TradeReceipt(String, String, String, String, Double, Double, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Double,java.lang.String)"},{"p":"cryptoTrader.dataStorage.tradeReceiptDatabase","c":"TradeReceiptsDatabase","l":"TradeReceiptsDatabase()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.views.mainView.tradeView","c":"TradeTableView","l":"TradeTableView()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.views.mainView.tradeView","c":"TradeView","l":"TradeView()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategy","l":"TradingStrategy()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategyA","l":"TradingStrategyA()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategyB","l":"TradingStrategyB()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategyC","l":"TradingStrategyC()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.models.brokerModel.tradingStrategies","c":"TradingStrategyD","l":"TradingStrategyD()","u":"%3Cinit%3E()"},{"p":"cryptoTrader.views.loginView","c":"LoginView","l":"unsuccesfulLogin()"},{"p":"cryptoTrader.views.loginView","c":"UpdateLoginView","l":"unsuccesfulLogin()"},{"p":"cryptoTrader.views.mainView.tradeView","c":"TradeView","l":"updateStats(JComponent)","u":"updateStats(javax.swing.JComponent)"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"BrokerTableView","l":"updateStrategyList(Vector<String>)","u":"updateStrategyList(java.util.Vector)"},{"p":"cryptoTrader.views.mainView.brokerTableView","c":"UpdateBrokerTableView","l":"updateStrategyList(Vector<String>)","u":"updateStrategyList(java.util.Vector)"}];updateSearchResults();